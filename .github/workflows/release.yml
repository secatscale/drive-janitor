name: Build and Release
on:
  push:
    tags: ['v*']

jobs:
#--------------------------------------------------------------------
# 1. Compilation des binaires (Linux / macOS / Windows)
#--------------------------------------------------------------------
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ── Linux / amd64 ────────────────────────────────────────
          - id: linux-amd64
            os: ubuntu-latest
            goos: linux
            goarch: amd64
            cc:   gcc
            pkgconfig: pkg-config
            yara_install: |
              sudo apt-get update
              sudo apt-get install -y pkg-config libyara-dev yara

          # ── macOS / arm64 ────────────────────────────────────────
          - id: macos-arm64
            os: macos-14
            goos: darwin
            goarch: arm64
            cc:   clang
            pkgconfig: pkg-config
            yara_install: brew install yara pkg-config

          # ── Windows / amd64 (MinGW + MSYS2) ──────────────────────
          - id: windows-amd64
            os: windows-latest
            goos: windows
            goarch: amd64
            cc:   x86_64-w64-mingw32-gcc    # GCC du toolchain MinGW
            pkgconfig: pkg-config
            # installation faite via l’action msys2/setup-msys2
            yara_install: echo "YARA already provided by MSYS2"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1

      #------------------------------------------------------------
      # Linux + macOS : installation YARA via apt / brew
      #------------------------------------------------------------
      - name: Install YARA toolchain
        if: matrix.os != 'windows-latest'
        shell: bash
        run: ${{ matrix.yara_install }}

      #------------------------------------------------------------
      # Windows : installer MSYS2 + YARA + toolchain MinGW
      #------------------------------------------------------------
      - name: Setup MSYS2 and YARA
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-yara

      #------------------------------------------------------------
      # Compilation
      #------------------------------------------------------------
      # Linux / macOS
      - name: Build ${{ matrix.id }}
        if: matrix.os != 'windows-latest'
        shell: bash
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          CC:         ${{ matrix.cc }}
          PKG_CONFIG: ${{ matrix.pkgconfig }}
        run: |
          set -euo pipefail
          mkdir -p dist
          EXT=""
          go build -v -trimpath -o "dist/drivejanitor-${GOOS}-${GOARCH}${EXT}" ./main.go

      # Windows (MSYS2 shell pour bénéficier de GCC + pkg-config)
      - name: Build ${{ matrix.id }} (windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          CC:         ${{ matrix.cc }}
          PKG_CONFIG: ${{ matrix.pkgconfig }}
        run: |
          set -euo pipefail
          mkdir -p dist
          EXT=".exe"
          go build -v -trimpath -o "dist/drivejanitor-${GOOS}-${GOARCH}${EXT}" ./main.go

      #------------------------------------------------------------
      # Publication des binaires
      #------------------------------------------------------------
      - name: Upload binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#--------------------------------------------------------------------
# 2. Packaging .pkg macOS (s’appuie sur le binaire produit ci-dessus)
#--------------------------------------------------------------------
  build-pkg-macos:
    needs: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1

      - name: Install YARA
        run: brew install yara pkg-config

      - name: Build binary (darwin/arm64)
        run: |
          mkdir -p dist
          GOOS=darwin GOARCH=arm64 go build -trimpath -o dist/drivejanitor ./main.go

      - name: Build .pkg
        run: |
          PKGROOT=pkgroot
          mkdir -p $PKGROOT/usr/local/bin
          mkdir -p $PKGROOT/usr/local/etc/drivejanitor
          cp dist/drivejanitor $PKGROOT/usr/local/bin/
          cp config.yaml       $PKGROOT/usr/local/etc/drivejanitor/config.yaml
          pkgbuild --root $PKGROOT \
                   --identifier com.secatscale.drivejanitor \
                   --version ${{ github.ref_name }} \
                   --install-location / \
                   dist/drivejanitor-darwin.pkg

      - name: Upload .pkg
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/drivejanitor-darwin.pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
