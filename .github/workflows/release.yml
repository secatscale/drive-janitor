name: Build and Release

on:
  push:
    tags: ['v*']

jobs:
#--------------------------------------------------------------------
# 1. Compilation des binaires (Linux / macOS / Windows depuis Linux)
#--------------------------------------------------------------------
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        # ── Linux / amd64 ───────────────────────────────────────────
        - id: linux-amd64
          os: ubuntu-latest
          goos: linux
          goarch: amd64
          cc: gcc
          pkgconfig: pkg-config
          yara_install: |
            sudo apt-get update
            sudo apt-get install -y pkg-config libyara-dev yara
        # ── Windows / amd64 (cross-compilation) ─────────────────────
        - id: windows-amd64
          os: ubuntu-latest
          goos: windows
          goarch: amd64
          cc: x86_64-w64-mingw32-gcc
          pkgconfig: pkg-config
          yara_install: |
            sudo apt-get update
            sudo apt-get install -y pkg-config libyara-dev yara gcc-mingw-w64
        # ── macOS / arm64 ──────────────────────────────────────────
        - id: macos-arm64
          os: macos-14
          goos: darwin
          goarch: arm64
          cc: clang
          pkgconfig: pkg-config
          yara_install: brew install yara pkg-config

    runs-on: ${{ matrix.os }}

    steps:
    #--------------------------------------------------------------#
    # Sources et Go
    #--------------------------------------------------------------#
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: 1.24.1

    #--------------------------------------------------------------#
    # Installation de YARA et dépendances
    #--------------------------------------------------------------#
    - name: Install YARA toolchain
      shell: bash
      run: ${{ matrix.yara_install }}

    #--------------------------------------------------------------#
    # Compilation multiplateforme
    #--------------------------------------------------------------#
    - name: Build ${{ matrix.id }}
      shell: bash
      env:
        GOOS:        ${{ matrix.goos }}
        GOARCH:      ${{ matrix.goarch }}
        CGO_ENABLED: 1
        CC:          ${{ matrix.cc }}
        PKG_CONFIG:  ${{ matrix.pkgconfig }}
      run: |
        set -euo pipefail
        mkdir -p dist
        EXT=""
        if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi
        go build -v -trimpath -o "dist/drivejanitor-${GOOS}-${GOARCH}${EXT}" ./main.go

    #--------------------------------------------------------------#
    # Upload des binaires vers GitHub Release
    #--------------------------------------------------------------#
    - name: Upload binaries
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#--------------------------------------------------------------------
# 2. Création du .pkg macOS à partir du binaire
#--------------------------------------------------------------------
  build-pkg-macos:
    needs: build
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: 1.24.1

    - name: Install YARA
      run: brew install yara pkg-config

    - name: Build binary (darwin/arm64)
      run: |
        mkdir -p dist
        GOOS=darwin GOARCH=arm64 go build -trimpath -o dist/drivejanitor ./main.go

    - name: Build .pkg
      run: |
        PKGROOT=pkgroot
        mkdir -p $PKGROOT/usr/local/bin
        mkdir -p $PKGROOT/usr/local/etc/drivejanitor
        cp dist/drivejanitor $PKGROOT/usr/local/bin/
        cp config.yaml       $PKGROOT/usr/local/etc/drivejanitor/config.yaml
        pkgbuild --root $PKGROOT \
                 --identifier com.secatscale.drivejanitor \
                 --version ${{ github.ref_name }} \
                 --install-location / \
                 dist/drivejanitor-darwin.pkg

    - name: Upload .pkg
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/drivejanitor-darwin.pkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}